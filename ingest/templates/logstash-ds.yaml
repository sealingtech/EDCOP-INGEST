apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: {{ template "ingest.fullname" . }}-logstash
  namespace: default
  labels:
    app: {{ template "ingest.name" . }}-logstash
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
    component: logstash
spec:
  selector:
    matchLabels:
      app: {{ template "ingest.name" . }}-logstash
  template:
    metadata:
      name: {{ template "ingest.name" . }}-logstash
      labels:
        app: {{ template "ingest.name" . }}-logstash
        component: logstash
      annotations:
        networks: '[
        { "name": "{{ .Values.networks.overlay }}" }
      ]'
    spec:
      containers:
      - name: logstash
        image: {{ .Values.images.logstash }}
        imagePullPolicy: Always
        ports:
        - name: cport-5044
          containerPort: 5044
        {{- if .Values.logstashConfig.features.syslog.enabled }}
        - name: cport-5144
          containerPort: 5144
        {{- end }}
        resources:
          requests:
            cpu: {{ .Values.logstashConfig.resources.requests.cpu | quote }}
            memory: {{ .Values.logstashConfig.resources.requests.memory | quote }}
          limits:
            cpu: {{ .Values.logstashConfig.resources.limits.cpu | quote }}
            memory: {{ .Values.logstashConfig.resources.limits.memory | quote }}
        volumeMounts:
          - mountPath: /usr/share/logstash/config
            name: logstash-config
          - mountPath: /usr/share/logstash/pipeline/
            name: logstash-pipelines
      volumes:
      - name: logstash-config
        configMap:
          name: {{ template "ingest.fullname" . }}-logstash-config
      - name: logstash-pipelines
        configMap:
          name: {{ template "ingest.fullname" . }}-logstash-pipelines
      restartPolicy: Always
      dnsPolicy: ClusterFirst
      nodeSelector:
        ingest: "true"
